package interfaceexample;
/*
 * 1.接口是一种特殊的抽象类，在类的基础上再次抽象
 * 	interface implements
 * 	1.1	方法：接口中所有的方法都是公开，抽象的；--> 可省略public abstract
 * 		属性：公开，静态，常量	--> 可省略public，static，final
 * 	1.2	一个类实现一个接口，必须全部实现，否则仍是一个抽象类。实现类中的方法必须加上public
 * 	1.3	可以声明接口，不能new接口
 * 	1.4	接口和接口之间可以多继承
 * 	1.5	接口作用：
 * 			1）实现多继承	
 * 			2）解偶作用
 * 	1.6	接口定义标准
 * 		1）接口：定义标准
 * 		2）接口调用者： 使用标准
 * 		3）接口的实现类： 	实现标准
 * 	1.7 注意点：
 * 		1）一个文件中： 只能有一个public接口，且与文件名相同；不可以在一个文件中同时定义一个
 * 						public接口和public类
 * 		2）接口与实体类：只有实现关系，没有继承关系
 * 			抽象类与实体类之间只有继承关系，没有实现关系
 * 			接口与接口之间只有继承关系，且是多继承
 * 		3）接口中可以不用写public，但实现类中public不可省略
 * 
 * 2.比较接口与抽象类
 * 	2.1 接口中不能有具体的实现，但抽象类可以
 * 	2.2	构造方法：接口没有，抽象类有
 * 	2.3 接口多继承，抽象类不行
 * 	2.4	接口实现要实现接口中全部方法，而抽象类不用
 * 	2.5	接口与实体类之间只有实现关系，实体类与抽象类之间只有继承关系，抽象类与接口之间既有实现关系又有继承关系
 * 	2.6	接口中方法：公开，抽象； 属性：公开，静态，常量。而抽象类不是
 */
public class interfaceTest {

}
